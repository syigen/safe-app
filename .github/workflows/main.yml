name: Safe App Build and Release

on:
  push:
    branches:
      - master
    tags:
      - v[0-9]+.[0-9]+.[0-9]+
      - v[0-9]+.[0-9]+.[0-9]+-alpha*
      - v[0-9]+.[0-9]+.[0-9]+-beta*
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Set build mode
        run: |
          BUILD_MODE='debug'
          if [[ "${GITHUB_REF}" =~ ^refs\/tags\/v* ]]; then
              BUILD_MODE='release'
          fi

          echo "Build mode: ${BUILD_MODE}"
          echo "BUILD_MODE=${BUILD_MODE}" >> $GITHUB_ENV

      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          java-version: '21.x'
          distribution: 'temurin'

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.27.2'

      - run: flutter pub get

      - name: Load environment variables
        run: |
          echo "SUPABASE_URL=${SUPABASE_URL}" > .env
          echo "SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}" >> .env
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}

      - name: Generate Android key store file
        if: ${{ env.BUILD_MODE == 'release' }}
        run: echo "${SIGNING_KEY}" | base64 -d > android/key.jks
        working-directory: ${{ github.workspace }}/android
        env:
          SIGNING_KEY: ${{ secrets.AndroidSigningKeyBase64 }}

      - name: Verify key.jks file
        if: ${{ env.BUILD_MODE == 'release' }}
        run: ls -lah android/key.jks

      - name: Generate Android key.properties file
        if: ${{ env.BUILD_MODE == 'release' }}
        run: |
          echo "storeFile=key.jks" > android/key.properties
          echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" >> android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties

      - name: Verify key.properties file
        if: ${{ env.BUILD_MODE == 'release' }}
        run: cat android/key.properties

      - name: Build Android packages
        run: |
          flutter build apk "--${BUILD_MODE}" --target-platform android-arm,android-arm64,android-x64 --split-per-abi
          if [[ "${BUILD_MODE}" == "release" ]]; then
            flutter build appbundle
          fi

      - name: Verify APK signature
        if: ${{ env.BUILD_MODE == 'release' }}
        run: jarsigner -verify -verbose -certs build/app/outputs/apk/release/app-arm64-v8a-release.apk

      - name: List APKs and AAB in release folder
        if: ${{ env.BUILD_MODE == 'release' }}
        run: |
          mkdir -p android_release/apk/release
          mkdir -p android_release/bundle/release
          cp build/app/outputs/apk/release/*.apk android_release/apk/release/
          cp build/app/outputs/bundle/release/*.aab android_release/bundle/release/
          zip -r android_release.zip android_release

      - name: Upload ZIP as artifact
        if: ${{ env.BUILD_MODE == 'release' }}
        uses: actions/upload-artifact@v4
        with:
          name: android_release_zip
          path: android_release.zip

  release:
    runs-on: ubuntu-latest
    needs: build
    if: success() && startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Generate version string
        run: echo "VERSION_STR=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: Download Android release artifacts
        uses: actions/download-artifact@v4
        with:
          name: android_release_zip
          path: ./

      - name: Extract ZIP file
        run: unzip android_release.zip

      - name: Upload APK and AAB files to GitHub Release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: |
            android_release/apk/release/*.apk
            android_release/bundle/release/*.aab
          name: Release ${{ env.VERSION_STR }}
          prerelease: ${{ contains(github.ref, '-alpha') || contains(github.ref, '-beta') }}
          tag: ${{ env.VERSION_STR }}
          token: ${{ secrets.GITHUB_TOKEN }}